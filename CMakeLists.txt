cmake_minimum_required(VERSION 3.10)
project(Minecrap)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/bin)
cmake_policy(SET CMP0072 NEW)
file(GLOB_RECURSE mcsrc ${CMAKE_SOURCE_DIR}/src/*)
add_executable(MinecrapB ${mcsrc})
target_include_directories(MinecrapB PUBLIC "${CMAKE_SOURCE_DIR}/include")
target_compile_features(MinecrapB PRIVATE cxx_std_17)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D'fopen_s(pFile,filename,mode)=((*(pFile))=fopen((filename),(mode)))==NULL'")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D'fread_s(ptr, size, esize, cnt, str)=fread(ptr,esize,cnt,str)==NULL'")
find_package(glfw3 REQUIRED)
find_package(OpenGL REQUIRED)
find_package(PNG REQUIRED)
target_link_libraries(MinecrapB glfw)
target_link_libraries(MinecrapB ${OPENGL_OpenGL_LIBRARY})
target_link_libraries(MinecrapB ${OPENGL_glu_LIBRARY})
target_link_libraries(MinecrapB ${CMAKE_DL_LIBS})
target_link_libraries(MinecrapB ${PNG_LIBRARY})
if (WIN32)
    target_compile_definitions(MinecrapB PRIVATE WIN=1)
endif()
add_custom_target(copy_assets ALL COMMAND ${CMAKE_COMMAND} -DSRCDIR=${CMAKE_SOURCE_DIR}/asset -DDSTDIR=${CMAKE_SOURCE_DIR}/bin -P ${CMAKE_SOURCE_DIR}/cmakemodules/copy_assets.cmake COMMENT "Copying assets to bin")

